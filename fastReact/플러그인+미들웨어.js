 /*
 MVC => 모델 뷰 컨트롤러 모델 즉 성격이 비슷한애들이 섞여있으면 코드복잡도가 증가하고 추가/수정할일이 생길때 너무 복잡하니. 따로따로 컴포넌트처럼 해서 관리를해주자는 그런의미같다.

 하지만 서버쪽에서도 코드가 바뀌면 client측에서도 코드를 바꿔줘야하는일이 생기기때문에 mvvm이 등장했다

 모델 - 뷰 - 뷰 모델

 즉 모두가 클라이언트의 복잡도는 커지지만 코드단에서 복잡도는 일정하게 유지하기위한 여러가지의 방법중 하나겟지? 하지만 DOM API의 문제를 해결해주진 못한다 그래서 현재까지 나온 가장 이상적인방법이

 React가 제시한 컨셉이다. => DOM자체를 쓰지않는 컨셉. => DOM이 문제라면. DOM자체를 쓰지말자!

 다음이야기 = react는 그럼 dom을 쓰지않을 생각을 햇을까?

 **플러그인 vs 미들웨어**

크룸 + 익스텐션에서 익스텐션의 느낌이지. 정작 본체인 크롬의 변경은없지만 기능들이 와서 추가되는느낌 => 플러그인 (즉 변경되지않는부분(크롬)과 변경되는부분(여러기능 ex:익스텐션)이 나눠져있는느낌)

미들웨어 역시 마찬가지로 본 코드의 구성의 변경은없이 기능을 추가하는 그런느낌인데 플러그인과 약간의 차이는있다. => 플러그인? 미들웨어? => 구글링해보자

 */ 